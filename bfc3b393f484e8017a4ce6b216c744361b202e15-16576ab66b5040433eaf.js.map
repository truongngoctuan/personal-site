{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./node_modules/@material-ui/core/esm/AppBar/AppBar.js","webpack:///./src/components/header.js","webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./src/components/seo.js"],"names":["children","data","siteTitle","title","style","margin","maxWidth","className","variant","color","Date","props","ref","classes","_props$color","_props$position","position","other","Paper","square","component","elevation","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","width","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","transform","positionRelative","colorDefault","backgroundColor","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","Header","marginBottom","padding","to","textDecoration","string","charAt","toUpperCase","slice","_props$component","Component","_props$square","_props$elevation","_props$variant","outlined","rounded","elevations","shadows","forEach","shadow","index","boxShadow","background","paper","text","transition","transitions","create","borderRadius","shape","border","divider","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","typography","caption","button","overline","srOnly","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","SEO","description","lang","meta","site","metaDescription","htmlAttributes","titleTemplate","content","property","author"],"mappings":"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","file":"bfc3b393f484e8017a4ce6b216c744361b202e15-16576ab66b5040433eaf.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nimport Header from \"./header\";\r\nimport \"./layout.css\";\r\nimport \"./components.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        style={{\r\n          margin: `auto auto`,\r\n          maxWidth: 960,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer className=\"px-2\">\r\n          <Typography variant=\"subtitle1\" color=\"textPrimary\">\r\n            Â© {new Date().getFullYear()}, Built with TNT\r\n          </Typography>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Layout;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // â ï¸ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static',\n      transform: 'translateZ(0)' // Make sure we can see the elevation.\n\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { AppBar } from \"@material-ui/core\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      // background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <AppBar position=\"static\" color=\"inherit\"\r\n      style={{\r\n              // background: `rebeccapurple`,\r\n\r\n        margin: `0 auto`,\r\n        // maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `darkgrey`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </AppBar>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}