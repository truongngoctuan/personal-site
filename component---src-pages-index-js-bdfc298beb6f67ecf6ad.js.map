{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/Divider/Divider.js","webpack:///./src/components/pages/currency-api.js","webpack:///./src/components/pages/currency-dashboard.js","webpack:///./src/pages/index.js"],"names":["props","ref","classes","className","_props$raised","raised","other","Paper","root","elevation","withStyles","overflow","name","_props$absolute","absolute","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","variant","vertical","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","middle","spacing","marginRight","alignSelf","baseUrl","a","getLatestAUDCurrency","response","console","formatCurrency","currency","Intl","style","formatter","connect","currencies","dashboardCurrencies","dispatch","setCurrency","type","data","currencyCode","value","audValue","usdValue","useEffect","getLatestCurrency","resultData","color","count","increment","title","onClick","navigate"],"mappings":"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","file":"component---src-pages-index-js-bdfc298beb6f67ecf6ad.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import axios from \"axios\";\r\n\r\nconst baseUrl = \"https://poc-dashboard-currency.azurewebsites.net/api\";\r\nexport async function getLatestCurrency(currencyCode) {\r\n  return getLatestAUDCurrency();\r\n}\r\n\r\nasync function getLatestAUDCurrency() {\r\n  return axios\r\n    .get(`${baseUrl}/currencylatestvaluegetteraction?currencyCode=AUD`)\r\n    .then((response) => response.data)\r\n    .catch((err) => console.log(err));\r\n}\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { Typography, Card, Divider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { getLatestCurrency } from \"./currency-api\";\r\n\r\nfunction formatCurrency(currency, number) {\r\n  var formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency,\r\n  });\r\n\r\n  return formatter.format(number); /* $2,500.00 */\r\n}\r\n\r\nconst CurrencyDashboardPageContent = ({ currencies, setCurrency }) => {\r\n  const audValue = currencies[\"AUD\"] ? formatCurrency(\"VND\", currencies[\"AUD\"]) : \"Loading\";\r\n  const usdValue = currencies[\"USD\"] ? formatCurrency(\"VND\", currencies[\"USD\"]) : \"Loading\";;\r\n\r\n  useEffect(() => {\r\n    const currencyCode = \"AUD\";\r\n    getLatestCurrency(currencyCode).then((resultData) => {\r\n      setCurrency(currencyCode, resultData.value);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Typography className=\"\" variant=\"h2\" color=\"primary\">\r\n        QUICK DASHBOARD\r\n      </Typography>\r\n\r\n      <div className=\"flex flex-row flex-wrap\">\r\n        <Card\r\n          className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 m-2 py-4\"\r\n          elevation={2}\r\n        >\r\n          <Typography className=\"px-6\" variant=\"h4\" color=\"secondary\">\r\n            AUD to VND\r\n          </Typography>\r\n          <Divider></Divider>\r\n          <Typography className=\"mt-2 px-6\" variant=\"h2\">\r\n            {audValue}\r\n          </Typography>\r\n        </Card>\r\n        <Card\r\n          className=\"w-full md:w-1/3 lg:w-1/4 xl:w-1/5 m-2 py-4\"\r\n          elevation={2}\r\n        >\r\n          <Typography className=\"px-6\" variant=\"h4\" color=\"secondary\">\r\n            USD to VND\r\n          </Typography>\r\n          <Divider></Divider>\r\n          <Typography className=\"mt-2 px-6\" variant=\"h2\">\r\n            {usdValue}\r\n          </Typography>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ dashboardCurrencies }) => {\r\n  return { currencies: dashboardCurrencies };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrency: (currencyCode, value) =>\r\n      dispatch({\r\n        type: `DASHBOARD-CURRENCY-GET`,\r\n        data: { currencyCode, value },\r\n      }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CurrencyDashboardPageContent);\r\n","import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport SEO from \"../components/seo\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { navigate } from \"gatsby\";\r\nimport CurrencyDashboardPageContent from \"../components/pages/currency-dashboard\";\r\n\r\nconst IndexPage = ({ count, increment }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n\r\n      <Typography variant=\"h2\" color=\"textPrimary\">\r\n        Hi people\r\n      </Typography>\r\n      <Typography variant=\"body1\" color=\"textSecondary\">\r\n        Welcome to TRUONG Ngoc Tuan's site. To have fun!\r\n      </Typography>\r\n      <br />\r\n\r\n      <div className=\"my-4 p-2 border bg-gray-200 rounded-lg\">\r\n        <CurrencyDashboardPageContent />\r\n      </div>\r\n\r\n      <div className=\"flex flex-row\">\r\n        <button\r\n          className=\"px-4 py-2 rounded-full shadow-md bg-orange-500 hover:bg-orange-600 text-white m-2\"\r\n          onClick={() => navigate(`/page-2/`)}\r\n        >\r\n          Go to page 2\r\n        </button>\r\n        <button\r\n          className=\"px-4 py-2 rounded-full shadow-md bg-orange-500 hover:bg-orange-600 text-white m-2\"\r\n          onClick={() => navigate(`/app`)}\r\n        >\r\n          Go to novel reader app\r\n        </button>\r\n        <button\r\n          className=\"px-4 py-2 rounded-full shadow-md bg-orange-500 hover:bg-orange-600 text-white m-2\"\r\n          onClick={() => navigate(`/text-reader`)}\r\n        >\r\n          Go to test text reader app\r\n        </button>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n"],"sourceRoot":""}