{"version":3,"sources":["webpack:///./src/components/molecules/novel-list.js","webpack:///./src/components/pages/novel-api.js","webpack:///./src/components/pages/novel-list.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///./src/components/molecules/chapter-item.js","webpack:///./src/components/molecules/chapter-list.js","webpack:///./node_modules/@material-ui/core/esm/styles/makeStyles.js","webpack:///./src/components/molecules/novel-info.js","webpack:///./src/components/pages/novel-details.js","webpack:///./src/pages/app.js"],"names":["NovelList","items","className","key","item","alt","src","onClick","navigate","style","textOverflow","a","baseUrl","response","console","connect","novels","dispatch","setNovels","type","data","useEffect","getList","class","href","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","ChapterItem","render","this","idx","itemBackgroundClass","role","tabIndex","variant","align","color","React","url","ChapterList","stylesOrCreator","options","makeStyles","defaultTheme","NovelInfo","thumbnail","synopsis","useStyles","elevation","paper","marginLeft","marginRight","cursor","borderRadius","objectFit","infoText","title","novel","setNovel","codeName","getByCodeName","path","withPrefix"],"mappings":"kMAKMA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OACE,yBAAKC,UAAU,8CACZD,EAAA,KAAU,mBACT,yBAAKE,IAAKC,EAAV,SAAyBF,UAAU,0BACjC,yBACEA,UADF,sFAEEG,IAFF,kBAGEC,IAAKF,EAHP,UAIEG,QAAS,kBAAMC,mBAAS,sBAAsBJ,EAArC,aAEX,yBAAKF,UAAU,QACb,uBACEA,UADF,uEAEEO,MAAO,CAAEC,aAAc,aAEtBN,EALL,MAOE,uBAAGF,UAAU,6CAfR,eA2BjBF,eAAyB,CACvBC,MAAO,IAGT,Q,sbCrCO,sBAAAU,EAAA,+EACE,EAAAA,EAAA,IACGC,eADH,MAEC,mBAAcC,EAAd,QAFD,OAGE,YAEL,OADAC,eACO,SANN,4C,wDAUA,uBAAAH,EAAA,+EACE,EAAAA,EAAA,IACGC,eADH,SAEC,mBAAcC,EAAd,QAFD,OAGE,YAEL,OADAC,eACO,SANN,4C,sBCPP,IA2DeC,eARS,SAAC,GACvB,MAAO,CAAEC,OAD6B,EAAbA,WAIA,SAACC,GAC1B,MAAO,CAAEC,UAAW,mBAAUD,EAAS,CAAEE,KAAF,iBAA0BC,aAGpDL,EA3Dc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQE,EAAgB,EAAhBA,UAStC,OARAG,qBAAU,YDJZ,2CCKIC,SAAe,YACb,GACEJ,UAHNG,IASE,yBAAKnB,UAAU,IASb,wBAAIqB,MAAM,8BACR,wBAAIA,MAAM,eACR,uBACEA,MADF,gFAEEC,KAAK,KAJX,SASE,wBAAID,MAAM,QACR,uBACEA,MADF,oGAEEC,KAAK,KAZX,aAiBE,wBAAID,MAAM,QACR,uBACEA,MADF,yEAEEC,KAAK,KA7Bb,mBAoCE,qBAAWvB,MAAOe,Q,gHC5BpBS,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,MA6B1E,IA6HH,EAAO,cAAiB,SAAcK,EAAOC,GAC/C,IAAIC,EAAsBF,EAAMG,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBJ,EAAMK,WAC1BA,OAAmC,IAAtBD,EAA+B,UAAYA,EACxDE,EAAUN,EAAMM,QAChBC,EAAgBP,EAAMpC,UACtB4C,EAAmBR,EAAMS,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBX,EAAMY,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmBb,EAAMc,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAcf,EAAMlC,KACpBA,OAAuB,IAAhBiD,GAAiCA,EACxCC,EAAiBhB,EAAMiB,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYlB,EAAMmB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYpB,EAAMqB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYtB,EAAMuB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiBxB,EAAMyB,QACvBA,OAA6B,IAAnBD,EAA4B,EAAIA,EAC1CE,EAAc1B,EAAM2B,KACpBA,OAAuB,IAAhBD,EAAyB,OAASA,EACzCE,EAAY5B,EAAM6B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAY9B,EAAM+B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsBhC,EAAMiC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQ,YAAyBlC,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1MpC,EAAY,YAAK0C,EAAQ6B,KAAM5B,EAAeK,GAAa,CAACN,EAAQM,UAAuB,IAAZa,GAAiBnB,EAAQ,cAAcT,OAAOC,OAAO2B,MAAa3D,GAAQwC,EAAQxC,KAAMmE,GAAgB3B,EAAQ2B,aAA4B,QAAdnB,GAAuBR,EAAQ,gBAAgBT,OAAOC,OAAOgB,KAAuB,SAATa,GAAmBrB,EAAQ,WAAWT,OAAOC,OAAO6B,KAAwB,YAAftB,GAA4BC,EAAQ,kBAAkBT,OAAOC,OAAOO,KAAgC,YAAjBF,GAA8BG,EAAQ,oBAAoBT,OAAOC,OAAOK,KAA6B,eAAZc,GAA4BX,EAAQ,cAAcT,OAAOC,OAAOmB,MAAmB,IAAPc,GAAgBzB,EAAQ,WAAWT,OAAOC,OAAOiC,MAAc,IAAPR,GAAgBjB,EAAQ,WAAWT,OAAOC,OAAOyB,MAAc,IAAPF,GAAgBf,EAAQ,WAAWT,OAAOC,OAAOuB,MAAc,IAAPF,GAAgBb,EAAQ,WAAWT,OAAOC,OAAOqB,MAAc,IAAPU,GAAgBvB,EAAQ,WAAWT,OAAOC,OAAO+B,MACl2B,OAAoB,gBAAoBnB,EAAW,YAAS,CAC1D9C,UAAWA,EACXqC,IAAKA,GACJiC,OAkIU,EArBE,OAAAE,EAAA,IAjRG,SAAgBC,GAClC,OAAO,YAAS,YAAS,CAEvBF,KAAM,GAGNvB,UAAW,CACT0B,UAAW,aACXC,QAAS,OACTC,SAAU,OACVC,MAAO,QAIT3E,KAAM,CACJwE,UAAW,aACXI,OAAQ,KAKVT,aAAc,CACZU,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBJ,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBnC,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBF,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnB0C,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBR,EAAOS,GAC7B,IAAIC,EAAS,GAgBb,OAfA5D,EAAS6D,SAAQ,SAAUvB,GACzB,IAAIwB,EAAeZ,EAAMZ,QAAQA,GAEZ,IAAjBwB,IAIJF,EAAO,WAAWlD,OAAOiD,EAAY,KAAKjD,OAAO4B,IAAY,CAC3DiB,OAAQ,IAAI7C,OAAOR,EAAU4D,EAAc,IAC3CR,MAAO,eAAe5C,OAAOR,EAAU4D,GAAe,KACtD,YAAa,CACXC,QAAS7D,EAAU4D,EAAc,SAIhCF,EAgIJI,CAAed,EAAO,OAAQA,EAAMe,YAAYC,KAAKC,QAAO,SAAUC,EAAa1F,GAGpF,OApMJ,SAAsB2F,EAAcnB,EAAOS,GACzC,IAAIC,EAAS,GACb3D,EAAW4D,SAAQ,SAAUS,GAC3B,IAAI5F,EAAM,QAAQgC,OAAOiD,EAAY,KAAKjD,OAAO4D,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIhB,EAAQ,GAAG5C,OAAO6D,KAAKC,MAAMF,EAAO,GAAK,KAAQ,IAAM,KAG3DV,EAAOlF,GAAO,CACZ+F,UAAWnB,EACXoB,SAAU,EACVC,SAAUrB,QAfVM,EAAOlF,GAAO,CACZ+F,UAAW,OACXC,SAAU,EACVC,SAAU,aAZZf,EAAOlF,GAAO,CACZ+F,UAAW,EACXC,SAAU,EACVC,SAAU,WAyBG,OAAfhB,EACF,YAASU,EAAcT,GAEvBS,EAAanB,EAAMe,YAAYW,GAAGjB,IAAeC,EA6JjDiB,CAAaT,EAAalB,EAAOxE,GAC1B0F,IACN,OAsJ+B,CAClCU,KAAM,WADS,CAEd,G,gBCnXGC,E,gLAEJC,kBAAU,IAAD,EACeC,KADf,MACCC,EADD,MACMJ,EADN,OAGDK,EACJD,4BADF,oBAGA,OACE,yBAAKzG,UAAL,eAA8B2G,KAA9B,SAA4CC,SAAS,KACnD,qBAAM5G,UAAW,CAAC,yBAAyB,IACzC,uBAAYA,UAAZ,gBAAsC6G,QAAtC,QAAsDC,MAAM,UACzDL,EAHP,IAME,qBAAMzG,UAAW,CAAC,qBAAqB,IACrC,uBAAYA,UAAZ,gBAAsC6G,QAAtC,QAAsDE,MAAM,iBARlE,M,GARsBC,IAAMlE,WA+BhCwD,eAA2B,CACzBG,IADyB,EAEzBQ,IAFyB,yBAGzBZ,KAAM,+BAGR,QCpCMa,EAAc,SAAC,GAAD,IAAGnH,EAAH,eAClB,qBAAMC,UAAU,iBACbD,EAAA,KAAU,qBACT,qBAAaE,IAAKC,EAAlB,IAA4BuG,IAA5B,EAAwCQ,IAAK/G,EAA7C,IAAuDmG,KAAMnG,EAAKmG,YASxEa,eAA2B,CACzBnH,MAAO,CACL,CACEkH,IADF,yBAEEZ,KAAM,+BAER,CACEY,IADF,yBAEEZ,KAAM,gCAER,CACEY,IADF,yBAEEZ,KAAM,4CAKZ,Q,wBCvBe,MAPf,SAAoBc,GAClB,IAAIC,EAAUxF,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAO,OAAAyF,EAAA,GAAyBF,EAAiB,YAAS,CACxDG,aAAcA,EAAA,GACbF,K,YCHCG,EAAY,SAAC,GAAmC,IAAjClB,EAAgC,EAAhCA,KAAMmB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC9B/E,EAAUgF,IAChB,OACE,qBAAM1E,WAAN,EAAgBhD,UAAW0C,EAAQ6B,MACjC,qBAAMJ,GAAN,GAAcR,GAAI,GAChB,uBAAOgE,UAAW,GAChB,yBACE3H,UAAW0C,EADb,UAEEvC,IAFF,kBAGEC,IAAKoH,MAIX,qBAAMxH,UAAW0C,EAAjB,SAAmCyB,GAAnC,GAA2CR,GAAI,GAC7C,uBAAY3D,UAAZ,gBAAsC6G,QAAQ,MADhD,GAIE,uBAJF,MAKE,uBAAY7G,UAAZ,gBAAsC6G,QAAQ,WAhBpD,MAwBIa,EAAYL,GAAW,kBAAY,CACvC9C,KAAM,CACJ0B,SAAU,GAEZ2B,MAAO,CACLC,WAAYpD,UADP,GAELqD,YAAarD,UAFR,GAGLyB,SAHK,IAIL6B,OAAQ,WAEVP,UAAW,CACTQ,aAAcvD,UADL,IAITI,MAJS,OAKToD,UALS,QAMTtD,QANS,QAOTG,OAAQ,QAEVoD,SAAU,CACR5C,QAASb,kBAUb8C,eAAyB,CACvBY,MADuB,2BAEvBX,UAFuB,qDAGvBC,SACE,8eAGJ,QCzBe5G,G,UAAAA,aAVS,SAAC,GACvB,MAAO,CAAEuH,MAD4B,EAAZA,UAIA,SAACrH,GAC1B,MAAO,CACLsH,SAAU,mBAActH,EAAS,CAAEE,KAAF,YAAqBC,KAAMoH,QAIjDzH,EAjCiB,SAAC,GAAmC,IAAjCyH,EAAgC,EAAhCA,SAAUF,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAQlD,OAPAlH,qBAAU,YPCZ,4COAIoH,UAA6B,YAC3B,GACEF,UAHNlH,IAQE,yBAAKnB,UAAU,OAEb,qBACEqG,KAAM+B,EADR,KAEEZ,UAAWY,EAFb,UAGEX,SAAUW,EAAMX,WAElB,yBAAKzH,UAAU,4BACb,oBATN,Y,YCMF,UAfgB,kBACd,2BACE,uBAAKmI,MAAM,iBACX,yBAAKnI,UAAU,IACb,gCACE,qBACEwI,KAAMC,qBAAW,kCAEnB,qBAAsBD,KAAMC,qBAAW,qBACvC,qBAAsBD,KAAMC,qBAAW","file":"component---src-pages-app-js-d71775a563fc0fbdf14f.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { navigate } from \"gatsby\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst NovelList = ({ items }) => {\r\n  return (\r\n    <div className=\"novel-list flex flex-row flex-wrap mx-auto\">\r\n      {items.map((item) => (\r\n        <div key={item.codeName} className=\"flex flex-col w-32 m-2\">\r\n          <img\r\n            className=\"shadow-lg rounded rounded-md max-w-full max-h-full h-40 object-cover cursor-pointer\"\r\n            alt=\"novel-thumbnail\"\r\n            src={item.thumbnail}\r\n            onClick={() => navigate(`/app/novel-details/${item.codeName}`)}\r\n          />\r\n          <div className=\"mt-1\">\r\n            <p\r\n              className=\"font-sans text-base whitespace-no-wrap overflow-hidden text-gray-100\"\r\n              style={{ textOverflow: \"ellipsis\" }}\r\n            >\r\n              {item.name}\r\n            </p>\r\n            <p className=\"font-sans text-xs font-bold text-gray-600\">2019</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nNovelList.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n\r\nNovelList.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default NovelList;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api\"; // \"localhost:5002\";\r\nexport async function getList() {\r\n  return axios\r\n    .get(`${baseUrl}/novels`)\r\n    .then((response) => response.data) // parse JSON from request\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return null;\r\n    });\r\n}\r\n\r\nexport async function getByCodeName(codeName) {\r\n  return axios\r\n    .get(`${baseUrl}/novels/${codeName}`)\r\n    .then((response) => response.data) // parse JSON from request\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return null;\r\n    });\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport NovelList from \"../molecules/novel-list\";\r\nimport { connect } from \"react-redux\";\r\nimport { getList } from \"./novel-api\";\r\n\r\nconst NovelListPageContent = ({ novels, setNovels }) => {\r\n  useEffect(() => {\r\n    getList().then((resultData) => {\r\n      if (resultData) {\r\n        setNovels(resultData);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {/* <div class=\"mx-4 mb-6\">\r\n        <input\r\n          class=\"bg-gray-600 appearance-none border-2 border-gray-800 w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n          id=\"inline-full-name\"\r\n          type=\"text\"\r\n          value=\"Search\"\r\n        />\r\n      </div> */}\r\n      <ul class=\"flex bg-gray-800 shadow-lg\">\r\n        <li class=\"-mb-px mr-1\">\r\n          <a\r\n            class=\"inline-block py-2 px-4 text-gray-200 font-semibold border-b-4 border-blue-600\"\r\n            href=\"#\"\r\n          >\r\n            Alls\r\n          </a>\r\n        </li>\r\n        <li class=\"mr-1\">\r\n          <a\r\n            class=\"inline-block py-2 px-4 text-gray-500 hover:text-gray-300 font-semibold border-b-4 border-gray-800\"\r\n            href=\"#\"\r\n          >\r\n            Trending\r\n          </a>\r\n        </li>\r\n        <li class=\"mr-1\">\r\n          <a\r\n            class=\"inline-block py-2 px-4 text-gray-500 hover:text-gray-300 font-semibold\"\r\n            href=\"#\"\r\n          >\r\n            Favorites\r\n          </a>\r\n        </li>\r\n      </ul>\r\n      >\r\n      <NovelList items={novels} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ novels }) => {\r\n  return { novels };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return { setNovels: (data) => dispatch({ type: `NOVEL-GET-LIST`, data }) };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NovelListPageContent);\r\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends(_extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs')), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends(_extends({}, StyledGrid.propTypes), {}, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nclass ChapterItem extends React.Component {\r\n\r\n  render() {\r\n    const { idx, name } = this.props;\r\n\r\n    const itemBackgroundClass =\r\n      idx % 2 === 0 ? \"chapter-item--even\" : \"chapter-item--odd\";\r\n\r\n    return (\r\n      <div className=\"chapter-item\" role=\"button\" tabIndex=\"0\">\r\n        <Grid className={[\"chapter-item--text-idx\", itemBackgroundClass]}>\r\n          <Typography className=\"text-gray-200\" variant=\"body2\" align=\"center\">\r\n            {idx + 1}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid className={[\"chapter-item--text\", itemBackgroundClass]}>\r\n          <Typography className=\"text-gray-200\" variant=\"body2\" color=\"textSecondary\">\r\n            {name}\r\n          </Typography>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nChapterItem.propTypes = {\r\n  idx: PropTypes.number,\r\n  url: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nChapterItem.defaultProps = {\r\n  idx: 0,\r\n  url: \"issth-book-1-chapter-1\",\r\n  name: \"Chapter 1: Scholar Meng Hao\",\r\n};\r\n\r\nexport default ChapterItem;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport ChapterItem from \"./chapter-item\";\r\n\r\nconst ChapterList = ({ items }) => (\r\n  <Grid className=\"chapters-list\">\r\n    {items.map((item, index) => (\r\n      <ChapterItem key={item.url} idx={index} url={item.url} name={item.name} />\r\n    ))}\r\n  </Grid>\r\n);\r\n\r\nChapterList.propTypes = {\r\n  items: PropTypes.array,\r\n};\r\n\r\nChapterList.defaultProps = {\r\n  items: [\r\n    {\r\n      url: \"issth-book-1-chapter-1\",\r\n      name: \"Chapter 1: Scholar Meng Hao\",\r\n    },\r\n    {\r\n      url: \"issth-book-1-chapter-2\",\r\n      name: \"Chapter 2: The Reliance Sect\",\r\n    },\r\n    {\r\n      url: \"issth-book-1-chapter-3\",\r\n      name: \"Chapter 3: Promotion to the Outer Sect\",\r\n    },\r\n  ],\r\n};\r\n\r\nexport default ChapterList;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\r\n\r\nconst NovelInfo = ({ name, thumbnail, synopsis }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid xs={12} sm={3}>\r\n        <Paper elevation={4}>\r\n          <img\r\n            className={classes.thumbnail}\r\n            alt=\"novel-thumbnail\"\r\n            src={thumbnail}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid className={classes.infoText} xs={12} sm={9}>\r\n        <Typography className=\"text-gray-200\" variant=\"h2\">\r\n          {name}\r\n        </Typography>\r\n        <br />\r\n        <Typography className=\"text-gray-200\" variant=\"caption\">\r\n          {synopsis}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    maxWidth: 500,\r\n    cursor: \"pointer\",\r\n  },\r\n  thumbnail: {\r\n    borderRadius: theme.spacing(0.5),\r\n    // marginRight: theme.spacing(1),\r\n\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n    display: \"block\",\r\n    margin: \"auto\",\r\n  },\r\n  infoText: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nNovelInfo.propTypes = {\r\n  name: PropTypes.string,\r\n  thumbnail: PropTypes.string,\r\n  synopsis: PropTypes.string,\r\n};\r\n\r\nNovelInfo.defaultProps = {\r\n  title: \"I shall seal the heavens\",\r\n  thumbnail: \"https://cdn.wuxiaworld.com/images/covers/issth.jpg\",\r\n  synopsis:\r\n    \"I Shall Seal the Heavens is the story of the young scholar Meng Hao, who gets forcibly recruited into a sect of immortal cultivators. In the cultivation world, the strong prey on the weak, and the law of the jungle prevails. Meng Hao must adapt to survive. Filled with both comedy and drama, I Shall Seal the Heavens remains one of the most beloved xianxia stories ever translated. What does it mean to “Seal the Heavens?” This is a secret that you will have to uncover along with Meng Hao!\",\r\n};\r\n\r\nexport default NovelInfo;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport ChapterList from \"../molecules/chapter-list\";\r\nimport NovelInfo from \"../molecules/novel-info\";\r\n\r\nimport \"./novel-details.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { getByCodeName } from \"./novel-api\";\r\n\r\nconst NovelDetailsPageContent = ({ codeName, novel, setNovel }) => {\r\n  useEffect(() => {\r\n    getByCodeName(codeName).then((resultData) => {\r\n      if (resultData) {\r\n        setNovel(resultData);\r\n      }\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"m-4\">\r\n      {/* <Typography variant=\"body1\">{codeName}</Typography> */}\r\n      <NovelInfo\r\n        name={novel.name}\r\n        thumbnail={novel.thumbnail}\r\n        synopsis={novel.synopsis}\r\n      />\r\n      <div className=\"novel-details-page--list\">\r\n        <ChapterList />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ novel }) => {\r\n  return { novel };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setNovel: (codeName) => dispatch({ type: `NOVEL-GET`, data: codeName }),\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NovelDetailsPageContent);\r\n","import React from \"react\";\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport SEO from \"../components/seo\";\r\nimport NovelListPageContent from \"../components/pages/novel-list\";\r\nimport NovelDetailsPageContent from \"../components/pages/novel-details\";\r\nimport { withPrefix } from \"gatsby\";\r\nimport AppLayout from \"../components/app-layout\";\r\n\r\nconst AppPage = () => (\r\n  <AppLayout>\r\n    <SEO title=\"novel reader\" />\r\n    <div className=\"\">\r\n      <Router>\r\n        <NovelDetailsPageContent\r\n          path={withPrefix(\"/app/novel-details/:codeName\")}\r\n        />\r\n        <NovelListPageContent path={withPrefix(\"/app/novel-list\")} />\r\n        <NovelListPageContent path={withPrefix(\"/app/\")} />\r\n      </Router>\r\n    </div>\r\n  </AppLayout>\r\n);\r\n\r\nexport default AppPage;\r\n"],"sourceRoot":""}