{"version":3,"sources":["webpack:///./src/components/app-layout.js","webpack:///./node_modules/@material-ui/core/esm/AppBar/AppBar.js","webpack:///./src/components/header.js","webpack:///./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./src/components/seo.js"],"names":["children","className","style","backgroundColor","width","height","viewBox","xmlns","d","variant","Date","props","ref","classes","_props$color","color","_props$position","position","other","Paper","square","component","elevation","root","concat","capitalize","withStyles","theme","backgroundColorDefault","palette","type","grey","display","flexDirection","boxSizing","zIndex","appBar","flexShrink","positionFixed","top","left","right","positionAbsolute","positionSticky","positionStatic","transform","positionRelative","colorDefault","getContrastText","colorPrimary","primary","main","contrastText","colorSecondary","secondary","colorInherit","colorTransparent","name","Header","siteTitle","marginBottom","margin","padding","to","textDecoration","string","charAt","toUpperCase","slice","_props$component","Component","_props$square","_props$elevation","_props$variant","outlined","rounded","elevations","shadows","forEach","shadow","index","boxShadow","background","paper","text","transition","transitions","create","borderRadius","shape","border","divider","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","typography","caption","button","overline","srOnly","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","SEO","description","lang","meta","title","site","metaDescription","htmlAttributes","titleTemplate","content","property","author"],"mappings":"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","file":"49203ce6ff6533c106dd3d9fe3b928f852c95f25-8790f0ec8adbeed51f87.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useStaticQuery, graphql } from \"gatsby\";\r\n\r\nimport Header from \"./header\";\r\nimport \"./layout.css\";\r\nimport \"./components.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst AppLayout = ({ children }) => {\r\n  const title = \"NOVEL\";\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col\" style={{\r\n      backgroundColor: \"#17181b\" \r\n    }}>\r\n      <nav className=\"flex items-center justify-between flex-wrap bg-gray-800 px-6 py-3 shadow-lg\">\r\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\r\n          <svg className=\"fill-current h-8 w-8 mr-2\" width=\"54\" height=\"54\" viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M13.5 22.1c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05zM0 38.3c1.8-7.2 6.3-10.8 13.5-10.8 10.8 0 12.15 8.1 17.55 9.45 3.6.9 6.75-.45 9.45-4.05-1.8 7.2-6.3 10.8-13.5 10.8-10.8 0-12.15-8.1-17.55-9.45-3.6-.9-6.75.45-9.45 4.05z\"/></svg>\r\n          <span className=\"font-semibold text-xl tracking-tight\">{title}</span>\r\n        </div>\r\n        <div className=\"block lg:hidden\">\r\n          <button className=\"flex items-center px-3 py-2 border rounded text-teal-200 border-teal-400 hover:text-white hover:border-white\">\r\n            <svg className=\"fill-current h-3 w-3\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><title>Menu</title><path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\"/></svg>\r\n          </button>\r\n        </div>\r\n        {/* <div className=\"w-full block flex-grow lg:flex lg:items-center lg:w-auto\">\r\n          <div className=\"text-sm lg:flex-grow\">\r\n            <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n              Docs\r\n            </a>\r\n            <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white mr-4\">\r\n              Examples\r\n            </a>\r\n            <a href=\"#responsive-header\" className=\"block mt-4 lg:inline-block lg:mt-0 text-teal-200 hover:text-white\">\r\n              Blog\r\n            </a>\r\n          </div>\r\n        </div> */}\r\n      </nav>\r\n      <main className=\"flex-grow flex\">{children}</main>\r\n      <footer className=\"px-2\">\r\n        <Typography variant=\"subtitle1\" className=\"text-white\">\r\n          © {new Date().getFullYear()}, Built with TNT\r\n        </Typography>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nAppLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default AppLayout;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  var backgroundColorDefault = theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900];\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      boxSizing: 'border-box',\n      // Prevent padding issue with the Modal and fixed positioned AppBar.\n      zIndex: theme.zIndex.appBar,\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `position=\"fixed\"`. */\n    positionFixed: {\n      position: 'fixed',\n      top: 0,\n      left: 'auto',\n      right: 0,\n      '@media print': {\n        // Prevent the app bar to be visible on each printed page.\n        position: 'absolute'\n      }\n    },\n\n    /* Styles applied to the root element if `position=\"absolute\"`. */\n    positionAbsolute: {\n      position: 'absolute',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"sticky\"`. */\n    positionSticky: {\n      // ⚠️ sticky is not supported by IE 11.\n      position: 'sticky',\n      top: 0,\n      left: 'auto',\n      right: 0\n    },\n\n    /* Styles applied to the root element if `position=\"static\"`. */\n    positionStatic: {\n      position: 'static',\n      transform: 'translateZ(0)' // Make sure we can see the elevation.\n\n    },\n\n    /* Styles applied to the root element if `position=\"relative\"`. */\n    positionRelative: {\n      position: 'relative'\n    },\n\n    /* Styles applied to the root element if `color=\"default\"`. */\n    colorDefault: {\n      backgroundColor: backgroundColorDefault,\n      color: theme.palette.getContrastText(backgroundColorDefault)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"transparent\"`. */\n    colorTransparent: {\n      backgroundColor: 'transparent',\n      color: 'inherit'\n    }\n  };\n};\nvar AppBar = React.forwardRef(function AppBar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$position = props.position,\n      position = _props$position === void 0 ? 'fixed' : _props$position,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"position\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    component: \"header\",\n    elevation: 4,\n    className: clsx(classes.root, classes[\"position\".concat(capitalize(position))], classes[\"color\".concat(capitalize(color))], className, position === 'fixed' && 'mui-fixed'),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AppBar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary', 'transparent']),\n\n  /**\n   * The positioning type. The behavior of the different options is described\n   * [in the MDN web docs](https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning).\n   * Note: `sticky` is not universally supported and will fall back to `static` when unavailable.\n   */\n  position: PropTypes.oneOf(['absolute', 'fixed', 'relative', 'static', 'sticky'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAppBar'\n})(AppBar);","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { AppBar } from \"@material-ui/core\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      // background: `rebeccapurple`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <AppBar position=\"static\" color=\"inherit\"\r\n      style={{\r\n              // background: `rebeccapurple`,\r\n\r\n        margin: `0 auto`,\r\n        // maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `darkgrey`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </AppBar>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof string !== 'string') {\n      throw new Error('Material-UI: capitalize(string) expects a string argument.');\n    }\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}